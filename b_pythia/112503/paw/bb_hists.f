      REAL FUNCTION bb_hists()
*********************************************************
*                                                       *
* This file was generated by HUWFUN.                    *
*                                                       *
*********************************************************
*
*     Ntuple Id:      10   
*     Ntuple Title:   B0->J/Psi+K Ntuple
*     Creation:       17/10/2003 14.57.28
*
*********************************************************
*
      LOGICAL         CHAIN
      CHARACTER*128   CFILE
      INTEGER         IDNEVT,NCHEVT,ICHEVT
      REAL            OBS(13)
*
      COMMON /PAWIDN/ IDNEVT,OBS
      COMMON /PAWCHN/ CHAIN, NCHEVT, ICHEVT
      COMMON /PAWCHC/ CFILE
*
*--   Ntuple Variable Declarations
*
      DOUBLE PRECISION AMBPX(10),AMBPY(10),AMBPZ(10),AMBE(10),AMBPT(10)
     + ,AMBP(10),AMBPHI(10),AMBTHET(10),AMBETA(10),AKSPX(10),AKSPY(10)
     + ,AKSPZ(10),AKSE(10),AKSPT(10),AKSP(10),AKSPHI(10),AKSTHET(10)
     + ,AKSETA(10),AMUPX(10),AMUPY(10),AMUPZ(10),AMUE(10),AMUPT(10)
     + ,AMUP(10),AMUPHI(10),AMUTHET(10),AMUETA(10),AJPPX(10),AJPPY(10)
     + ,AJPPZ(10),AJPE(10),AJPPT(10),AJPP(10),AJPPHI(10),AJPTHET(10)
     + ,AJPETA(10),B0PX(10),B0PY(10),B0PZ(10),B0E(10),B0PT(10),B0P(10)
     + ,B0PHI(10),B0THET(10),B0ETA(10),BQPX(10),BQPY(10),BQPZ(10)
     + ,BQE(10),BQPT(10),BQP(10),BQPHI(10),BQTHET(10),BQETA(10)
     + ,UPBSEP(40),UPPX(40),UPPY(40),UPPZ(40),UPE(40),UPPT(40),UPP(40)
     + ,UPPHI(40),UPTHET(40),UPETA(40)
      INTEGER IMB,IMBID(10),IMBINDX(10),IMBCHG(10),IKSHT,IKSID(10)
     + ,IKINDX(10),IKPAR(10),IKSCHG(10),IMU,IMUID(10),IMEVT(10)
     + ,IMINDX(10),IMUCHG(10),IJPSI,IJPID(10),IJINDX(10),IJPCHG(10)
     + ,IBmes,IB0ID(10),IBINDX(10),IB0CHG(10),IBQRK,IBQID(10)
     + ,IBQINDX(10),IBQCHG(10),IPARTS,IUPID(40),IUPINDX(40),IUPCHG(40)
*
      COMMON /PAWCR4/ IMB,IMBID,IMBINDX,IMBCHG,IKSHT,IKSID,IKINDX,IKPAR
     + ,IKSCHG,IMU,IMUID,IMEVT,IMINDX,IMUCHG,IJPSI,IJPID,IJINDX,IJPCHG
     + ,IBmes,IB0ID,IBINDX,IB0CHG,IBQRK,IBQID,IBQINDX,IBQCHG,IPARTS
     + ,IUPID,IUPINDX,IUPCHG
      COMMON /PAWCR8/ AMBPX,AMBPY,AMBPZ,AMBE,AMBPT,AMBP,AMBPHI,AMBTHET
     + ,AMBETA,AKSPX,AKSPY,AKSPZ,AKSE,AKSPT,AKSP,AKSPHI,AKSTHET,AKSETA
     + ,AMUPX,AMUPY,AMUPZ,AMUE,AMUPT,AMUP,AMUPHI,AMUTHET,AMUETA,AJPPX
     + ,AJPPY,AJPPZ,AJPE,AJPPT,AJPP,AJPPHI,AJPTHET,AJPETA,B0PX,B0PY,B0PZ
     + ,B0E,B0PT,B0P,B0PHI,B0THET,B0ETA,BQPX,BQPY,BQPZ,BQE,BQPT,BQP
     + ,BQPHI,BQTHET,BQETA,UPBSEP,UPPX,UPPY,UPPZ,UPE,UPPT,UPP,UPPHI
     + ,UPTHET,UPETA
*

*
*--   Enter user code here
*
C... only do any of this stuff if there was a B0 found in the event

      IF (IBmes.gt.0) THEN

C... fill histograms for everything stored in the ntuple
      
      DO B=1,IBmes		  
         CALL HFILL(6010,REAL(IBQID(B)),0.,1.)
         CALL HFILL(6020,REAL(IBQINDX(B)),0.,1.)
         CALL HFILL(6030,REAL(IBQCHG(B)),0.,1.)
         CALL HFILL(6040,REAL(BQPX(B)),0.,1.)
         CALL HFILL(6050,REAL(BQPY(B)),0.,1.)
         CALL HFILL(6060,REAL(BQPZ(B)),0.,1.)
         CALL HFILL(6070,REAL(BQE(B)),0.,1.)
         CALL HFILL(6080,REAL(BQPT(B)),0.,1.)
         CALL HFILL(6090,REAL(BQP(B)),0.,1.)
         CALL HFILL(6100,REAL(BQPHI(B)),0.,1.)
         CALL HFILL(6110,REAL(BQTHET(B)),0.,1.)
         CALL HFILL(6120,REAL(BQETA(B)),0.,1.)   
         
         CALL HFILL(5010,REAL(IB0ID(B)),0.,1.)
         CALL HFILL(5020,REAL(IBINDX(B)),0.,1.)
         CALL HFILL(5030,REAL(IB0CHG(B)),0.,1.)
         CALL HFILL(5040,REAL(B0PX(B)),0.,1.)
         CALL HFILL(5050,REAL(B0PY(B)),0.,1.)
         CALL HFILL(5060,REAL(B0PZ(B)),0.,1.)
         CALL HFILL(5070,REAL(B0E(B)),0.,1.)
         CALL HFILL(5080,REAL(B0PT(B)),0.,1.)
         CALL HFILL(5090,REAL(B0P(B)),0.,1.)
         CALL HFILL(5100,REAL(B0PHI(B)),0.,1.)
         CALL HFILL(5110,REAL(B0THET(B)),0.,1.)
         CALL HFILL(5120,REAL(B0ETA(B)),0.,1.)
         
         CALL HFILL(4010,REAL(IJPID(B)),0.,1.)
         CALL HFILL(4020,REAL(IJINDX(B)),0.,1.)
         CALL HFILL(4030,REAL(IJPCHG(B)),0.,1.)
         CALL HFILL(4040,REAL(AJPPX(B)),0.,1.)
         CALL HFILL(4050,REAL(AJPPY(B)),0.,1.)
         CALL HFILL(4060,REAL(AJPPZ(B)),0.,1.)
         CALL HFILL(4070,REAL(AJPE(B)),0.,1.)
         CALL HFILL(4080,REAL(AJPPT(B)),0.,1.)
         CALL HFILL(4090,REAL(AJPP(B)),0.,1.)
         CALL HFILL(4100,REAL(AJPPHI(B)),0.,1.)
         CALL HFILL(4110,REAL(AJPTHET(B)),0.,1.)
         CALL HFILL(4120,REAL(AJPETA(B)),0.,1.)       
         
         CALL HFILL(3010,REAL(IMUID(B)),0.,1.)
c         CALL HFILL(3015,REAL(IMEVT(B)),0.,1)
         CALL HFILL(3020,REAL(IMINDX(B)),0.,1.)
         CALL HFILL(3030,REAL(IMUCHG(B)),0.,1.)
         CALL HFILL(3040,REAL(AMUPX(B)),0.,1.)
         CALL HFILL(3050,REAL(AMUPY(B)),0.,1.)
         CALL HFILL(3060,REAL(AMUPZ(B)),0.,1.)
         CALL HFILL(3070,REAL(AMUE(B)),0.,1.)
         CALL HFILL(3080,REAL(AMUPT(B)),0.,1.)
         CALL HFILL(3090,REAL(AMUP(B)),0.,1.)
         CALL HFILL(3100,REAL(AMUPHI(B)),0.,1.)
         CALL HFILL(3110,REAL(AMUTHET(B)),0.,1.)
         CALL HFILL(3120,REAL(AMUETA(B)),0.,1.)
         
         
         CALL HFILL(2010,REAL(IKSID(B)),0.,1.)
         CALL HFILL(2015,REAL(IKPAR(B)),0.,1)
         CALL HFILL(2020,REAL(IKINDX(B)),0.,1.)
         CALL HFILL(2030,REAL(IKSCHG(B)),0.,1.)
         CALL HFILL(2040,REAL(AKSPX(B)),0.,1.)
         CALL HFILL(2050,REAL(AKSPY(B)),0.,1.)
         CALL HFILL(2060,REAL(AKSPZ(B)),0.,1.)
         CALL HFILL(2070,REAL(AKSE(B)),0.,1.)
         CALL HFILL(2080,REAL(AKSPT(B)),0.,1.)
         CALL HFILL(2090,REAL(AKSP(B)),0.,1.)
         CALL HFILL(2100,REAL(AKSPHI(B)),0.,1.)
         CALL HFILL(2110,REAL(AKSTHET(B)),0.,1.)
         CALL HFILL(2120,REAL(AKSETA(B)),0.,1.)
         
         CALL HFILL(1010,REAL(IMBID(B)),0.,1.)
         CALL HFILL(1020,REAL(IMBINDX(B)),0.,1.)
         CALL HFILL(1030,REAL(IMBCHG(B)),0.,1.)
         CALL HFILL(1040,REAL(AMBPX(B)),0.,1.)
         CALL HFILL(1050,REAL(AMBPY(B)),0.,1.)
         CALL HFILL(1060,REAL(AMBPZ(B)),0.,1.)
         CALL HFILL(1070,REAL(AMBE(B)),0.,1.)
         CALL HFILL(1080,REAL(AMBPT(B)),0.,1.)
         CALL HFILL(1090,REAL(AMBP(B)),0.,1.)
         CALL HFILL(1100,REAL(AMBPHI(B)),0.,1.)
         CALL HFILL(1110,REAL(AMBTHET(B)),0.,1.)
         CALL HFILL(1120,REAL(AMBETA(B)),0.,1.)
      ENDDO
      
      IF (IPARTS.GE.5) THEN
         DO B=1,5                  
            CALL HFILL(7010,REAL(IUPID(B)),0.,1.)
            CALL HFILL(7020,REAL(IUPINDX(B)),0.,1.)
            CALL HFILL(7030,REAL(IUPCHG(B)),0.,1.)
            CALL HFILL(7040,REAL(UPPX(B)),0.,1.)
            CALL HFILL(7050,REAL(UPPY(B)),0.,1.)
            CALL HFILL(7060,REAL(UPPZ(B)),0.,1.)
            CALL HFILL(7070,REAL(UPE(B)),0.,1.)
            CALL HFILL(7080,REAL(UPPT(B)),0.,1.)
            CALL HFILL(7090,REAL(UPP(B)),0.,1.)
            CALL HFILL(7100,REAL(UPPHI(B)),0.,1.)
            CALL HFILL(7110,REAL(UPTHET(B)),0.,1.)
            CALL HFILL(7120,REAL(UPETA(B)),0.,1.)
            CALL HFILL(7130,REAL(UPBSEP(B)),0.,1.)
         ENDDO
      ELSE 
         DO B=1,IPARTS                 
            CALL HFILL(7010,REAL(IUPID(B)),0.,1.)
            CALL HFILL(7020,REAL(IUPINDX(B)),0.,1.)
            CALL HFILL(7030,REAL(IUPCHG(B)),0.,1.)
            CALL HFILL(7040,REAL(UPPX(B)),0.,1.)
            CALL HFILL(7050,REAL(UPPY(B)),0.,1.)
            CALL HFILL(7060,REAL(UPPZ(B)),0.,1.)
            CALL HFILL(7070,REAL(UPE(B)),0.,1.)
            CALL HFILL(7080,REAL(UPPT(B)),0.,1.)
            CALL HFILL(7090,REAL(UPP(B)),0.,1.)
            CALL HFILL(7100,REAL(UPPHI(B)),0.,1.)
            CALL HFILL(7110,REAL(UPTHET(B)),0.,1.)
            CALL HFILL(7120,REAL(UPETA(B)),0.,1.)
            CALL HFILL(7130,REAL(UPBSEP(B)),0.,1.)
         ENDDO
      ENDIF
      
      CALL HFILL(6000,REAL(IBQRK),0.,1.)
      CALL HFILL(5000,REAL(IBmes),0.,1.)
      CALL HFILL(4000,REAL(IJPSI),0.,1.)
      CALL HFILL(3000,REAL(IMU),0.,1.)
      CALL HFILL(1000,REAL(IMB),0.,1.)
      CALL HFILL(2000,REAL(IKSHT),0.,1.)
      CALL HFILL(7000,REAL(IPARTS),0.,1.)

c... get the eta difference between each of the three highest pt UPs found and 
c     the first B0 found. (UPs are only relevant to the first B0 found)


      ETADIFF1 = ABS(UPETA(1) - B0ETA(1))
      ETADIFF2 = ABS(UPETA(2) - B0ETA(1))
      ETADIFF3 = ABS(UPETA(3) - B0ETA(1))

C... plot the eta difference vs. the phi difference between the highest pt UP
c     found and the first B0 found.  Separate the histograms according to 
c     charge of the highest pt UP.

      IF (IUPCHG(1).GT.0) THEN
         CALL HFILL(8000,REAL(UPBSEP(1)),REAL(ETADIFF1),1.)
      ELSE IF (IUPCHG(1).LT.0) THEN
         CALL HFILL(8010,REAL(UPBSEP(1)),REAL(ETADIFF1),1.)
      ENDIF

c... calculate the normalized, weighted average charge of the 3 highest pt UPs
c     (divide by 3 to account for pythia assigning electron chg=3)

      TOTPT = UPPT(1) + UPPT(2) + UPPT(3)

      TOTCHG=(IUPCHG(1)*UPPT(1))+(IUPCHG(2)*UPPT(2))+(IUPCHG(3)*UPPT(3))
      AVGCHG = TOTCHG/(3*TOTPT)

c... separate group into positively charged and negatively charged groups
c... and plot each particle in the group individually (should peak at averages)
      IF (AVGCHG.GT.0.2) THEN
         CALL HFILL(8020,REAL(UPBSEP(1)),REAL(ETADIFF1),1.)
         CALL HFILL(8020,REAL(UPBSEP(2)),REAL(ETADIFF2),1.)
         CALL HFILL(8020,REAL(UPBSEP(3)),REAL(ETADIFF3),1.)
      ELSE IF (AVGCHG.LT.-0.2) THEN
         CALL HFILL(8030,REAL(UPBSEP(1)),REAL(ETADIFF1),1.)
         CALL HFILL(8030,REAL(UPBSEP(2)),REAL(ETADIFF2),1.)
         CALL HFILL(8030,REAL(UPBSEP(3)),REAL(ETADIFF3),1.)
      ENDIF

c... calculate the weighted average difference in phi
      TOTSEP=(UPBSEP(1)*UPPT(1))+(UPBSEP(2)*UPPT(2))+(UPBSEP(3)*UPPT(3))
      AVGSEP = TOTSEP/TOTPT

c... calculate the weighted average difference in eta
      TOTETA=(ETADIFF1*UPPT(1))+(ETADIFF2*UPPT(2))+(ETADIFF3*UPPT(3))
      AVGETA = TOTETA/TOTPT

c... separate group into positively charged and negatively charged groups
c... and plot each group's (weighted) average eta and phi values
      IF (AVGCHG.GT.0.2) THEN
         CALL HFILL(8040,REAL(AVGSEP),REAL(AVGETA),1.)
      ELSE IF (AVGCHG.LT.-0.2) THEN
         CALL HFILL(8050,REAL(AVGSEP),REAL(AVGETA),1.)
      ENDIF
*
c... calculate a weighted average for eta
      WTETA=(UPETA(1)*UPPT(1))+(UPETA(2)*UPPT(2))+(UPETA(3)*UPPT(3))
      WMETA=WTETA/TOTPT
      ETADIFFM = ABS(WMETA-B0ETA(1))

c... calculate a weighted average for phi
      WTPT=(UPPT(1)+UPPT(1))+(UPPT(2)*UPPT(2))+(UPPT(3)*UPPT(3))
      WMPT=WTPT/TOTPT

      WTPX=(UPPX(1)+UPPT(1))+(UPPX(2)*UPPT(2))+(UPPX(3)*UPPT(3))
      WMPX=WTPX/TOTPT

      WTPY=(UPPY(1)+UPPT(1))+(UPPY(2)*UPPT(2))+(UPPY(3)*UPPT(3))
      WMPY=WTPY/TOTPT

      WBCOMP=((B0PX(1)*WMPX)+(B0PY(1)*WMPY))/(WMPT*B0PT(1))
      WMSEP=ACOS(WBCOMP)

      IF (AVGCHG.GT.0.2) THEN
         CALL HFILL(8060,REAL(WMSEP),REAL(ETADIFFM),1.)
      ELSE IF (AVGCHG.LT.-0.2) THEN
         CALL HFILL(8070,REAL(WMSEP),REAL(ETADIFFM),1.)
      ENDIF


c... end "found B" restriction "if" statement
      ENDIF
*

      END
