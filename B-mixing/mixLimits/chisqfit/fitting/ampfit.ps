%!PS-Adobe-3.0
%%Title: ampfit_jh.C
%%For: Jamie Hegarty
%%Creator: a2ps version 4.13
%%CreationDate: Mon Apr 18 15:41:08 2005
%%BoundingBox: 24 24 588 768
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 2
%%PageOrder: Ascend
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontType get 0 eq {
    currentfont /FontMatrix get 3 get
  }{
    currentfont /FontMatrix get 3 get 1000 mul
  } ifelse
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Define these in case they're not in the FontInfo (also, here
    % they're easier to get to.
    /UnderlinePosition 1 def
    /UnderlineThickness 1 def
    
    % Get the underline position and thickness if they're defined.
    currentdict /FontInfo known {
      FontInfo
      
      dup /UnderlinePosition known {
	dup /UnderlinePosition get
	0 exch FontMatrix transform exch pop
	/UnderlinePosition exch def
      } if
      
      dup /UnderlineThickness known {
	/UnderlineThickness get
	0 exch FontMatrix transform exch pop
	/UnderlineThickness exch def
      } if
      
    } if
    currentdict 
  end 
} bind def

% composite fonts for ASCII-EUC mixed string
% Version 1.2 1/31/1990
% Orignal Ken'ichi HANDA (handa@etl.go.jp)
% Modified Norio Katayama (katayama@rd.nacsis.ac.jp),1998
% Extend & Fix Koji Nakamaru (maru@on.cs.keio.ac.jp), 1999
% Anyone can freely copy, modify, distribute this program.

/copyfont {	% font-dic extra-entry-count  copyfont  font-dic
	1 index maxlength add dict begin
	{	1 index /FID ne 2 index /UniqueID ne and
		{def} {pop pop} ifelse
	} forall
	currentdict
	end
} bind def

/compositefont { % ASCIIFontName EUCFontName RomanScale RomanOffset Rot(T/F) compositefont font
    /RomanRotation exch def
    /RomanOffset exch def
    /RomanScale exch def
    userdict /fixeucfont_dict known not {
	userdict begin
	    /fixeucfont_dict 2 dict begin
		/UpperByteEncoding [
		    16#00 1 16#20 { pop 0 } for
		    16#21 1 16#28 { 16#20 sub } for
		    16#29 1 16#2F { pop 0 } for
		    16#30 1 16#74 { 16#27 sub } for
		    16#75 1 16#FF { pop 0 } for
		] def
	        /LowerByteEncoding [
		    16#00 1 16#A0 { pop /.notdef } for
		    16#A1 1 16#FE { 16#80 sub 16 2 string cvrs
				    (cXX) dup 1 4 -1 roll
				    putinterval cvn } for
		    /.notdef
		] def
		currentdict
	    end def
	end
    } if
    findfont dup /FontType get 0 eq {
	14 dict begin
	    %
	    % 7+8 bit EUC font
	    %
	    12 dict begin
		/EUCFont exch def
		/FontInfo (7+8 bit EUC font) readonly def
		/PaintType 0 def
		/FontType 0 def
		/FontMatrix matrix def
		% /FontName
		/Encoding fixeucfont_dict /UpperByteEncoding get def
		/FMapType 2 def
		EUCFont /WMode known
		{ EUCFont /WMode get /WMode exch def }
		{ /WMode 0 def } ifelse
		/FDepVector [
		    EUCFont /FDepVector get 0 get
		    [ 16#21 1 16#28 {} for 16#30 1 16#74 {} for ]
		    {
			13 dict begin
			    /EUCFont EUCFont def
			    /UpperByte exch 16#80 add def	
			    % /FontName
			    /FontInfo (EUC lower byte font) readonly def
			    /PaintType 0 def
			    /FontType 3 def
			    /FontMatrix matrix def
			    /FontBBox {0 0 0 0} def
			    /Encoding
				fixeucfont_dict /LowerByteEncoding get def
			    % /UniqueID
			    % /WMode
			    /BuildChar {
				gsave
				exch dup /EUCFont get setfont
				/UpperByte get
				2 string
				dup 0 4 -1 roll put
				dup 1 4 -1 roll put
				dup stringwidth setcharwidth
				0 0 moveto show
				grestore
			    } bind def
			    currentdict
			end
			/lowerbytefont exch definefont
		    } forall
		] def
		currentdict
	    end
	    /eucfont exch definefont
	    exch
	    findfont 1 copyfont dup begin
		RomanRotation {
			/FontMatrix FontMatrix
			[ 0 RomanScale neg RomanScale 0 RomanOffset neg 0 ]
			matrix concatmatrix def
		}{
			/FontMatrix FontMatrix
			[ RomanScale 0 0 RomanScale 0 RomanOffset ] matrix concatmatrix
			def
			/CDevProc
			    {pop pop pop pop 0 exch -1000 exch 2 div 880} def
		} ifelse
	    end
	    /asciifont exch definefont
	    exch
	    /FDepVector [ 4 2 roll ] def
	    /FontType 0 def
	    /WMode 0 def
	    /FMapType 4 def
	    /FontMatrix matrix def
	    /Encoding [0 1] def
	    /FontBBox {0 0 0 0} def
%	    /FontHeight 1.0 def % XXXX
	    /FontHeight RomanScale 1.0 ge { RomanScale }{ 1.0 } ifelse def
	    /Descent -0.3 def   % XXXX
	    currentdict
	end
	/tmpfont exch definefont
	pop
	/tmpfont findfont
    }{
	pop findfont 0 copyfont
    } ifelse
} def	

/slantfont {	% FontName slant-degree  slantfont  font'
    exch findfont 1 copyfont begin
    [ 1 0 4 -1 roll 1 0 0 ] FontMatrix exch matrix concatmatrix
    /FontMatrix exch def
    currentdict
    end
} def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 612 def
/sw 792 def
/llx 24 def
/urx 768 def
/ury 588 def
/lly 24 def
/#copies 1 def
/th 15.000000 def
/fnfs 11 def
/bfs 7.060185 def
/cw 4.236111 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 86.400000 mul
def
/ph
   520.335631 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 5 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1-2) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 2.965278 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # (#include "dofit_v2.cpp";) p n
(2) # (//#include "bkgerr.cpp";) N
(3) # (//#include "resoVPDL.cpp";) N
(4) # () N
(5) # (// Initialize fit parameters) N
(6) # (#include "semiL.h";) N
(7) # () N
(8) # (Double_t resScl = 1.;) N
(9) # () N
(10) # (//Int_t nEvts = 500;) N
(11) # (Int_t nEvts = 425;) N
(12) # (//Int_t nEvts = 100000;) N
(13) # (//Double_t nLimit = 1.65; // 95% CL) N
(14) # (Double_t nLimit = 1.65;) N
(15) # () N
(16) # (Double_t tau = 1.5;) N
(17) # (//Double_t dm  = 5.;) N
(18) # (Double_t dm  = 1000.;) N
(19) # (//Double_t dm  = 6.;) N
(20) # () N
(21) # (// For k factor) N
(22) # (// Int_t bcuts = 0;) N
(23) # (// Int_t kfactor = 0;) N
(24) # (// Int_t VPDL = 0;) N
(25) # () N
(26) # (Double_t dilution = 0.4;) N
(27) # (// Double_t dilution = 0.282392;) N
(28) # () N
(29) # (// For no k factor) N
(30) # (// Int_t dSmear = 2;) N
(31) # (// Double_t tSigmaN = 0.00278/.03;) N
(32) # (// Double_t tSigmaW = 0.00351/.03;) N
(33) # (// Double_t fWid = 0.49;) N
(34) # () N
(35) # (// Initialize global variables) N
(36) # (//Int_t    nBins = 30;) N
(37) # (//Double_t maxLimit = 3.;) N
(38) # (Int_t    nBins = 20;) N
(39) # (Double_t maxLimit = 2.;) N
(40) # () N
(41) # (Double_t asymData[200];) N
(42) # (Double_t asymErr[200];) N
(43) # (Double_t asymX[200];) N
(44) # () N
(45) # (Double_t y[200];) N
(46) # (Double_t ey[200];) N
(47) # (Double_t x[200];) N
(48) # (Double_t ex[200];) N
(49) # () N
(50) # (Double_t iMax = 10;) N
(51) # (Double_t dmtst;) N
(52) # () N
(53) # (// Background to signal) N
(54) # (Double_t bkgSig[10]={5.6886, 4.62235, 3.8314, 3.1397, 3.54177, 3.97965, 4.27143,) N
0 T (3.39745, 4.6566, 3.24586};) N
(55) # () N
(56) # (// Initialize histograms \(filled in genData\)) N
(57) # (TH1F *umixed = new TH1F\("umixht","Decay Time Unmixed",nBins,0.,maxLimit\); ) N
(58) # (TH1F *mixed  = new TH1F\("mixht","Decay Time Mixed",nBins,0.,maxLimit\); ) N
(59) # () N
(60) # () N
(61) # () N
(62) # (ampfit_jh\(\){) N
(63) # () N
(64) # (  gRandom->SetSeed\(0\);) N
(65) # () N
(66) # (  // Start an array of histograms and fill them with the templates) N
(67) # (  // generated in by scaleFac:) N
(68) # () N
(69) # (  TH1F *h[50]; ) N
(70) # (  TObjArray a1\(0\);  ) N
(71) # () N
(72) # (  TFile *f = new TFile\("test_mk.root", "READ"\);  ) N
(ampfit_jh.C) (Page 1/4) (Apr 18, 05 15:33) title
border
/v 1 store
/x0 x v get 2.965278 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(73) # (  TIter next\(f->GetListOfKeys\(\)\); ) p n
(74) # (  TKey *key;                      ) N
(75) # () N
(76) # (  Int_t k=0, i=1;) N
(77) # (  char nametmp [25], name [25], title [100];) N
(78) # () N
(79) # (  while \(\(key = \(TKey*\)next\(\)\)\){ ) N
(80) # () N
(81) # (    if \(k/\(\(3*i\)-2\) == 1.\){) N
(82) # () N
(83) # (      sprintf\(nametmp, "%s", key->GetName\(\)\);  ) N
(84) # (      h[i] = \(TH1F*\)f->Get\(nametmp\);      ) N
(85) # () N
(86) # (      sprintf\(name, "h%d", i\);                 ) N
(87) # (      h[i]->SetName\(name\);) N
(88) # () N
(89) # (      sprintf\(title, "%s \(h%d\)", key->GetName\(\), i\);  ) N
(90) # (      h[i]->SetTitle\(title\);) N
(91) # ( ) N
(92) # (      a1.Add\(h[i]\);) N
(93) # () N
(94) # (      i++;) N
(95) # (    }) N
(96) # (    k++;) N
(97) # (  }) N
(98) # () N
(99) # (  h[30] = real1;) N
(100) # (  h[31] = smer1;) N
(101) # () N
(102) # (  a1.Add\(h[30]\);) N
(103) # (  a1.Add\(h[31]\);) N
(104) # () N
(105) # (  // Get the relevant histograms created by dstag:) N
(106) # (  TFile *f1 = new TFile\("bs_asymm.root", "READ"\);) N
(107) # (  /**) N
(108) # (     In bs_asymm.root:) N
(109) # () N
(110) # (     h_unmixed_events = histogram with lbmctrue/0.03 for unmixed events) N
(111) # (     h_mixed_events = histogram with lbmctrue/0.03 for mixed events) N
(112) # (     h_asymm = asymmetry using h_unmixed_events and h_mixed_events) N
(113) # (     all_events_vpdl = histogram with lbmctrue/0.03, all events) N
(114) # (     h_lbdiff = histogram with lb/0.03 - lbmc/0.03, all events) N
(115) # () N
(116) # (   **/) N
(117) # (  lbdiff = \(TH1F*\)f1->Get\("h_lbdiff"\);) N
(118) # (  lbdiff->SetBins\(2*nBins, -maxLimit, maxLimit\);) N
(119) # (  lbdiff->SetTitle\("Reco Time - MC Time, all events"\);) N
(120) # (  a1.Add\(lbdiff\);) N
(121) # () N
(122) # (  asym = \(TH1F*\)f1->Get\("h_asymm"\);) N
(123) # (  asym->SetBins\(nBins,0.,maxLimit\);) N
(124) # (  a1.Add\(asym\);) N
(125) # () N
(126) # () N
(127) # (  // Do fitting:) N
(128) # () N
(129) # (  for \(Int_t i=0; i<40; i++\){) N
(130) # (    Double_t hcnt = h[1]->GetBinContent\(i\);) N
(131) # (    Double_t hcnt1 = h[30]->GetBinContent\(i\);) N
(132) # (    Double_t hcnt2 = h[31]->GetBinContent\(i\);) N
(133) # (    cout << "i = " << i << "  count = " << hcnt ) N
(134) # () S 8 T ( << "  real = " << hcnt1 ) N
(135) # () S 8 T ( << "  smer = " << hcnt2 ) N
(136) # (      //<< "  ratio = " cnt2/cnt1 ) N
(137) # () S 8 T ( << endl;) N
(138) # (  }) N
(139) # () N
(140) # (  TH1F *fix[50];) N
(141) # (  char fname[5];) N
(142) # (  for \(Int_t iLoop=1; iLoop<28; iLoop++\){) N
(143) # () N
(144) # (    cout << endl << endl << "iLoop = "<< iLoop << endl << endl;) N
(145) # () N
(ampfit_jh.C) (Page 2/4) (Apr 18, 05 15:33) title
border
grestore
(Printed by Jamie Hegarty) rhead
(ampfit_jh.C) (1/2) (Monday April 18, 2005) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3-4) 2
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 2.965278 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(146) # (    sprintf\(fname,"fix%d",iLoop\);) p n
(147) # (    fix[iLoop] = new TH1F\(fname,fname,nBins, 0., maxLimit\);) N
(148) # (    ) N
(149) # (    //divide the asymmetry histogram by each template) N
(150) # (    fix[iLoop]->Divide\(asym,h[iLoop]\);) N
(151) # (    ) N
(152) # (    for \(Int_t iAsym=0; iAsym < nBins; iAsym++\){) N
(153) # (      ) N
(154) # (      asymX[iAsym] = asym->GetBinCenter\(iAsym+1\);) N
(155) # (      asymData[iAsym] = fix[iLoop]->GetBinContent\(iAsym+1\);) N
(156) # (      asymErr[iAsym] = fix[iLoop]->GetBinError\(iAsym+1\);) N
(157) # (      ) N
(158) # (    }) N
(159) # (    cout << "IMAX = " << iMax << endl;) N
(160) # (    // Graph result of division by h[2] \(scale2\):      ) N
(161) # (    if \(iLoop == 2\){     ) N
(162) # (      TGraphErrors *gtst = new TGraphErrors\(20,asymX,asymData, 0, asymErr\);) N
(163) # (      gtst->SetTitle\("asymm/scale2 vs. lftm"\);) N
(164) # (    }) N
(165) # (    dmtst = iLoop;) N
(166) # (   ) N
(167) # (    // run fitting code in dofit_v2.cpp) N
(168) # (    dofit\(\);) N
(169) # () N
(170) # () N
(171) # (    fix[iLoop]->SetMaximum\(1.5\);) N
(172) # (    fix[iLoop]->SetMinimum\(-1.5\);) N
(173) # () N
(174) # (  }) N
(175) # () N
(176) # (  for \(Int_t j=0; j<iMax; j++\){) N
(177) # (    // x[j] = template number) N
(178) # (    // y[j] = amplitude \(from fit\) / dilution) N
(179) # (    cout << y[j] << "  " << ey[j] << "  ") N
(180) # () S 8 T ( << x[j] << "  " << ex[j] << endl;) N
(181) # (  }) N
(182) # () N
(183) # (  // Create Sensitivity and limit plots) N
(184) # (  Double_t sens[200], lim[200];) N
(185) # (  for \(Int_t j=0; j<28; j++\){) N
(186) # (    sens[j] = nLimit*ey[j]; // 95% CL of the Amplitude/dilution) N
(187) # (    lim[j] = y[j] + nLimit*ey[j]; // Max Amp/dil value with 95% CL) N
(188) # (  }) N
(189) # () N
(190) # (  TGraphErrors *g1 = new TGraphErrors\(10,x,y,ex,ey\);) N
(191) # (  g1->SetTitle\("Ampl./dil. vs. dm"\);) N
(192) # () N
(193) # (  TGraph *g2 = new TGraph\(11,x,sens\);) N
(194) # (  g2->SetTitle\("Sensitivity vs. Template # \(red\)"\);) N
(195) # (  g2->SetLineColor\(2\);) N
(196) # () N
(197) # (  TGraph *g3 = new TGraph\(11,x,lim\);) N
(198) # (  g3->SetTitle\("Limit \(blue\), Sensitivity \(red\)"\);) N
(199) # (  g3->SetLineColor\(4\);) N
(200) # () N
(201) # (  a1.Add\(g1\);) N
(202) # (  a1.Add\(g2\);) N
(203) # (  a1.Add\(g3\);) N
(204) # () N
(205) # (  TF1 *d_gaus = new TF1\("d_gaus", "gaus\(0\)+gaus\(3\)", -maxLimit, maxLimit\);) N
(206) # (  d_gaus->SetParameters\(0,0,0.25,0,0,0.5\);) N
(207) # (  d_gaus->FixParameter\(1,0\);) N
(208) # (  d_gaus->FixParameter\(4,0\);) N
(209) # () N
(210) # (  // Plot everything) N
(211) # () N
(212) # (  gROOT->SetStyle\("Plain"\);) N
(213) # (  gStyle->SetOptStat\(000000\);) N
(214) # (  gStyle->SetHistFillColor\(10\);) N
(215) # () N
(216) # (  TCanvas *plot = new TCanvas\("plot","plot",1200,800\);) N
(217) # (  plot->Divide\(3,2\);) N
(218) # () N
(ampfit_jh.C) (Page 3/4) (Apr 18, 05 15:33) title
border
/v 1 store
/x0 x v get 2.965278 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(219) # (  plot->cd\(1\);) p n
(220) # (  h[10]->Draw\(\);) N
(221) # () N
(222) # (  plot->cd\(2\);) N
(223) # (  lbdiff->Draw\(\);) N
(224) # (  lbdiff->Fit\(d_gaus\);) N
(225) # () N
(226) # (  plot->cd\(4\);) N
(227) # (  asym->Draw\(\);) N
(228) # (  TF1 *f_cos = new TF1\("f_cos", "0.4*cos\(8*x\)",0.,3.\);) N
(229) # (  f_cos->Draw\("same"\);) N
(230) # () N
(231) # (  plot->cd\(5\);) N
(232) # (  asym->Draw\(\);) N
(233) # (  TF1 *f_cos = new TF1\("f_cos", "0.4*cos\(7*x\)",0.,3.\);) N
(234) # (  f_cos->Draw\("same"\);) N
(235) # () N
(236) # (  //plot->cd\(5\);) N
(237) # (  //gPad->SetGrid\(\);) N
(238) # (  //gtst->Draw\("AL*"\);) N
(239) # () N
(240) # (  plot->cd\(3\);) N
(241) # (  gPad->SetGrid\(\);) N
(242) # (  g1->Draw\("AL*"\);) N
(243) # () N
(244) # (  plot->cd\(6\);) N
(245) # (  gPad->SetGrid\(\);) N
(246) # (  g3->Draw\("AL*"\);) N
(247) # (  g2->Draw\("L*"\);  ) N
(248) # () N
(249) # (  a1.Add\(plot\);) N
(250) # () N
(251) # (  // Output all of this stuff to a root file) N
(252) # () N
(253) # (  TFile fout \("ampfit.root","recreate"\);) N
(254) # (  a1.Write\(\);) N
(255) # (  fout.Close\(\);) N
(256) # (}) N
(ampfit_jh.C) (Page 4/4) (Apr 18, 05 15:33) title
border
grestore
(Printed by Jamie Hegarty) rhead
(ampfit_jh.C) (2/2) (Monday April 18, 2005) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
