//***********************************************
// Code to do an unbinned likelihood fit
//
// by P. Gutierrez
// 3-12-04
//***********************************************

// Include files


#include "unbinFitosc_d.cpp"
#include "func.cpp"


//----- Define data variables

Double_t runNo[50000];
Double_t evtNo[50000];
Double_t mass[50000];
Double_t lifetime[50000];
Int_t tag[50000];

//----- Define global variables

Double_t min = 0.;
Double_t max = 15.;
// set to 4000 for real run
Int_t nEvts = 425.;
Int_t nBins = 150.;


//----- Define arrays and stuff for fitting:

Double_t oscpar0_init = 1.5;
Double_t oscpar1_init = 10.;
Double_t oscpar2_init = 0.1;
Double_t oscpar3_init = 0.42;

Double_t oscerr0_step = 0.1;
Double_t oscerr1_step = 0.01;
Double_t oscerr2_step = 0.01;
Double_t oscerr3_step = 0.1;

Double_t fitpar[4];
Double_t fiterr[4];
Double_t dmpar;

void likelihood_jh()
{

  TStopwatch timer;
  timer.Start();
  // Define histogarams
  
  gStyle->SetOptFit(1111);
  gStyle->SetOptStat(111111);
 
  // Get the relevant histograms created by dstag:
  TFile *f1 = new TFile("bs_asymm.root", "READ");
  /**
     In bs_asymm.root:

     h_unmixed_events = histogram with lbmctrue/0.03 for unmixed events
     h_mixed_events = histogram with lbmctrue/0.03 for mixed events
     h_asymm = asymmetry using h_unmixed_events and h_mixed_events
     all_events_vpdl = histogram with lbmctrue/0.03, all events
     h_lbdiff = histogram with lb/0.03 - lbmc/0.03, all events

   **/

  h2 = (TH1F*)f1->Get("all_events_vpdl");
  h3 = (TH1F*)f1->Get("h_mixed_events");
  h4 = (TH1F*)f1->Get("h_unmixed_events");
    

    
    // Generate events
    
    //mixmasta_mc();
    

    // Do unbinned likelihood fit
    
    TF1 *f3 = new TF1("f3", lftmosc_plt_d, min, max, 5);
    TF1 *f4 = new TF1("f4", lftmosc_plt_d, min, max, 5);
    
 
    
    unbinFitosc_d();
    cout << "hi" << endl;      
    for (Int_t j=0; j<4; j++){
      f3->SetParameter(j,fitpar[j]);
      f4->SetParameter(j,fitpar[j]);
    }
    f3->SetParameter(4,1);

    f4->SetParameter(4,-1);
 
    

  TCanvas *vardm = new TCanvas("vardm","vardm",800,400);
  vardm->Divide(2,1);
  
  vardm->cd(1);
  h3->Draw();
  f3->Draw("same");
  
  vardm->cd(2);
  h4->Draw();
  f4->Draw("same"); 
  
 
  
  TObjArray a1(0);

  a1.Add(vardm);
  
  TFile var_dm("likelihood_jh.root", "recreate");
  a1.Write();
  var_dm.Close();
  
  timer.Stop();
  Double_t rtime = timer.RealTime();
  Double_t ctime = timer.CpuTime();
  
  cout << "Real time " << rtime << endl;
  cout << "CPU time  " << ctime << endl;
  
}
